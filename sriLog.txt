1)scaffolded and the rest
  -rake db:migrate - DONE
  -created a simple seed file - Done
  -test in console - NOTYET

2) adding devise and oauth
      -Add devise - Done
        devise routes - GET INSTRUCTOR HELP
      -adding static landing page DONE
3) Adding Instagram controllers and login 
      -Add login button to landing page for instagram DONE
      -redirect to instagram DONE
      -redirect to instagram connect DONE
      -configure Logout - NEED HELP
4) Selection process for picking photos and prevewing your buttons
      -Create divs and containers for each photo - DONE
        -grab photos
        -create photo objects 
        -render photo objecrts 
      -'selectify' a div when clicked on
      -Add a next button 
      -When next button is clicked, 
      I want to 
  1)put each pic in a container
  2)space out the containers
  3)have nav bars and headers
  4)do selection - CURRENT
  5)add to cart

SELECTION - 
  1) on hover have 'select this?' overlay - CURRENT
      2)have a expand button to expan view - CURRENT 
        3)investigate jlibary


CURRENT
  -on hover, do overlay - DONE
  -h2 make it small, white and centred always - DONE
  
Selection and creation of orders
  -On clicking of photos, add: photo instagram id and url to params, quantity, unit price, customer_id to order creation page. 
  1) unsterdtand the params array -CURRENT
  2)understand forms 
  3) understand instagram filds -DONE 
  4)fill parms and call the controller action 




1) put all pics in a grid and marginize left and right 
2) select a pic and overlay is selected 
3) number selection 
4) WORK/THINIK ABOUT ADDING TO CART
    -nested attributes 
    -use ajax?  






















order of creation 
      photo -> instagram_photo_id, url-> instagram_high_res_url, customer_id->curr_user
    Lineitem -> photo_id, product_id->url of current product, quanity->jquery dataquanity, unit-price->current_price unit price, order_id-> create a new order
  Order -> create a new order

ORder will have 
shipped: 
total:





--------------30th june----------------------

1) new table structures
  1)create on paper - DONE 
  2)redo the migrations - DONE
  3)seed data - Done
  4)try in console

      1)Understand nested atrributes -Done
      2)resee your example app - done
      3)understand forms - done 


      create order
      0)push to git 
      1)put form - DONE
      2)hidify it - CURRENT
      3)add main button 
      4)build hash -current
      5) 

        selection 
          1)on eachpic click, add quatity and put insta pic id and put 'selected'
          2)on big button click
            1)step through all the pictures
            2)if selected 
              create backwards
              photo - id




 Recursion presentation 

 1)figure out slide headdings - CURRENT
 2)5 topics - 5 mintues 
 3)Figure out 5 topics


-----------1 july ------------

1) add migration to orders to have incompete/complete. Incomplete is defualt - Done 
2) order and user flow - DONE
3)add users to your table, no worry about orders- CURRENT
3) add alias so I can have a current order. it will always be the last uncompleted order 


CURRENT
-work on the saving of new users and allowing them to save their accounts on the app

  1) refactor devise
        - add authictications migration -DONE
  2) add instagram -DONE
  3) have user log in and create account - DONE
  4)and google autheitications - DONE

  ---------------------2nd July-----------------------------------

  do the product page with links 
    -Sort out the proper flow - CURRENT
    -Do it for coffee mugs
        -have coffee mug picture 
        - click get pictures - CURRENT
        - add to orders
        - set up order logic




---------------2nd july 2nd half-----------------

1)modal pop up - DONE

2)form building - CURRENT














---------------3JULY-----------------


WHAT I NEED TO DO:





FORM BUILDING FOR ORDER

load and display pictures 
  all data-id-quanity = 0, pic-id = i

when a picture is clicked 
  class has been slected-> true 
  on up click -> data-id-quanity of html tag ++
              -> of the form field vaule 
  on down click -> data-id-quanity -- unless = 0 (set still zero)
                -> form field value 

  NON - ajax WAY
  
    when submit button pressed
    prevent default 

    START

    jquery/_ gets all the 20 pictures
    goes through each pic-id
      if the qaunity is !0
      create a new line item with jquery
      all i? submit the form and update order

    END
        

things to do - CURRENT
  1) set two fields pic id & data quantity -DONE 
  2)set click logic - CURRENT
  3) test this is working

--------------------------3rd july part 2-----------------------------

0) understand what JOn did - DONE
1) wire the jquery to change the forms -CURRENT
2) submit and check in the console
3) redirect to products which still has the number



1)
    -add 3 links - CURRENT
      -a select, up and down 
      -do on clicking sort them out 



-----------------------3rd july part 3---------------------------------


1)Form Logic - CURRENT
2)REdirect to procuts and have super form logic
4)JS on products
5)go to checkout
6)create instagram accounts
7)clear your basket ajax method
--------------------------------------------------------------



INSTRUCTOR HELP
1)empty quanity
2)lineitem is zero issue
3)moving forward, cart, state gem
4)checkout process in backbone

4))lineitems must not saved if quanity = 0 or instagram_id = 0
5)can't get zeero

FUTURE ISSUES

1)if their name is blank in instagram, they can't save to your app
3)must make emails unique
4)lineitems must not saved if quanity = 0 or instagram_id = 0
5)uncomment the greater than zero validation and use js to remove the form filed on submit form anyway

-------------4th july. Aaaaamayyyerika! ----------------


CART

1)make me a canvas
2)figure out what i want to do js wise
3)add fields to customer and order
4)shipping form
5)slide to stripe form
6)controller action for thank you and prawn


fields that need to be added
ORDER
invoice pdf 
CUSTOMER
address

----------------------------------------------


1)make me a canvas - DONE
2)sliding up shipping form - DONE

3)STRIPE
  1)ADD EXTRA FIELDS TO ORDER AND CUSTOMER - DONE
  2)migrate -DONE
  3)determine the flow of the charge -CURRENT
  4)create the stripe charge and test - CURRENT
  4)create the exit page
  5)create the entry page
  6)create the mailer and the prawn send off







-----------------------------------5th JULY--------------------------------------------


1) combo both forms and get them to work -CURRENT
2) make sure customer and order work ok
3) set order to be complete and have second order be ok





CURRENT
-build customer extracotr and send - DONE
-CHeckif everything flows propberly by printing -DONE
-CREATE stripe objects - DONE
push to git hub -DONE




------------------------------6th july ----------------------------

1)go through the site and list out all thefeatures that need to be done beofre the app is considered complete

STILL NEED TO DO

  BASIC SITE DESIGN
    -landing page with examples 
    -color scheme
    -unifiyinf theme
    -sassfiy it - MAYBE
    -link architutre
    -put in a nav bar for completness 

  -CANCAN *
    -current user to current customer issue
    -admin page 
  
  EXTRA STUFF
    -Background workers to grab photos
  
  -Products page
    -JS to put numbers on boxes 
    -Photos and descriptions and layout and colors

  Breadcrumbs layout trio *
    -summery of the orders page 1
    -form page 2
    -thank you page 3

  FORM PAGE *
    -error handling and flash notices for invalid card numbers etc 

  THANK YOU PAGE
    -prawnnify it with mailer
    -discount for you next purchase 
    -please apple-bookmark our page and you can get future notifications

  DEVISE AND USER ACCOUNTS
    -check for new users
    -form validations for new users 
    -if you have no instagram name
    -double check with cancan 

  PICTURES PAGE 
    -hide the forms compleetly 
    -get the glypichicons working propberly
    -postion them 
    -autocplete bar with searching of tags 

    Heroku and apple developer 

    autocomplete and tags 



---------------------------6th july------------------------------------------


thank you page 
  -get the invoive working - DONE 
    -make a pdf

  -look at prawn notes and example - DONE 

  -current_order issue - LATER




LAYOUT AND INTERMEDIATE PAGE 
  -LANDING PAGE -CURRENT

  -LANDING PAGE issues
    -change color of nav bar - CURRENT/TIM HELP
    -add pictures - TIM HELP 
    -copy the other landing page - TIM HELP 


---------------------------------- 6TH JULY NIGHT -------------------------------



-Products page
    -JS to put numbers on boxes 
    -Photos and descriptions and layout and colors

  Breadcrumbs layout trio
    -summery of the orders page 1
    -form page 2
    -thank you page 3

-PUSH to heroku and use the url 







----------7/8/9-----------------

Pirioties 

-CANCAN - DONE
-PUSH TO HEROKU - DONE
-PICTURES PAGE -CURRENT
-PRODUCTS PAGE
-ERROR handling for cards/flash messages
-XTRA STRIPE THINGY
-nav bar and layout and overall styling
-extra stuff and apple developer 
  




------------------PUSH TO HEROKU------------




------------7th JUly------------------


-PICTURES PAGE 
  -get rid of all the extra forms - DONE
  -jazziy the submit button - Done
  -another overlay with the quatnties
  -sizing and fiting - CURRENT
  -glyphicons placed proberly
  -autocomplete with tags?

-DEVISE form checking -CURREENT
  -add the form to the landing page
  -check both forms
  -cp paste




  -another overlay with the quatnties
    -create a overlay
      -target it 
      -set teh quanity 



  -CANCAN 
    -follow instructions - CURRENT
    -slove the problem, customers can't acess other people's orders 
    -need to set default roles
    -install cancan 
    -uncomment the thing
    -check -DONE

    COMMIITT


----------------------------7th july 8pm to late------------------------------


http://sri-final-project.herokuapp.com => heroku site

zero push - LAST THING TO DO
devise forms - done, need instructor help
photo - form
layout - and font awesome




---------------------------8th july---------------------------------------------


LAYOUT - page by page
-landing page - CURRENT
-products page- next 



-------------------------8th july morning-----------------

COMMIT
navbar - current
  -look at current, what links I need extract, put dual focus nav bar

  wht links i need

  -not allowed to products/orders page reroute to main page 

  WHAT I HAVE DECIDED 
  one nav bar for landing page
  static links for the rest

  main nav bar -




  PRODUCT PAGE

  -green colour fixed normal bar
  -see past orders 
  -current order

  products
    -one grid (yield this?)
    -add links to pics nd remove pics 
      --add back pic to carsouel
    -checkout footer 

    CURRENT 
    -find six pics 
    -sex seeds
    -crop them all 
    - add them to carosuel 

    -----------------PAYMENT FORM---------------------

    -remove the fields I don't need
    -move the panel up and use it to display errors 


    errors to demonstarte - 333 and eee for cvc 
    CURRENT - ALERT POP UP 


    -----------------------push to heroku and get user subscriptions---------------

---------------------------8th july end of day ---------------------------

1)cache photos
  -use sidekick 
  -remote image 


INSTAGRAM TEST APP DETAILS 

usname:sritestapp777
pass:wa***
email:sritestapp777@gmail.com




function stripeResponseHandler(status, response) {
                if (response.error) {
                                        console.log("I'm in the stripe resonpnse");
                    // re-enable the submit button
                    $('.submit-button').removeAttr("disabled");
                    // show hidden div
                    // document.getElementById('a_x200').style.display = 'block';
                    // show the errors on the form
                    // $(".payment-errors").html(response.error.message);
                    console.log(response.error.message);
                    $("#errorPrint").html(response.error.message);
                } else {
                    var form$ = $("#payment-form");
                    // token contains id, last4, and card type
                    var token = response['id'];
                                        console.log("stripe token is" + token);
                    // insert the token into the form so it gets submitted to the server
                    form$.append("<input type='hidden' name='stripeToken' value='" + token + "' />");
                    // and submit
                    form$.get(0).submit();
                }
            }


  





        